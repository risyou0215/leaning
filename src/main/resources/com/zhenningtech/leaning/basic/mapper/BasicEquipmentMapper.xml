<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhenningtech.leaning.basic.mapper.BasicEquipmentMapper">
  <resultMap id="BaseResultMap" type="com.zhenningtech.leaning.basic.model.BasicEquipment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 28 11:50:55 CST 2019.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="no" jdbcType="VARCHAR" property="no" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="category" jdbcType="INTEGER" property="category" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 28 11:50:55 CST 2019.
    -->
    delete from basic_equipment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhenningtech.leaning.basic.model.BasicEquipment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 28 11:50:55 CST 2019.
    -->
    insert into basic_equipment (id, no, name, 
      category, type, address, 
      status, deleted, description
      )
    values (#{id,jdbcType=INTEGER}, #{no,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{category,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, 
      #{status,jdbcType=BIT}, #{deleted,jdbcType=INTEGER}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.zhenningtech.leaning.basic.model.BasicEquipment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 28 11:50:55 CST 2019.
    -->
    update basic_equipment
    set no = #{no,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      category = #{category,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      deleted = #{deleted,jdbcType=INTEGER},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 28 11:50:55 CST 2019.
    -->
    select id, no, name, category, type, address, status, deleted, description
    from basic_equipment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 28 11:50:55 CST 2019.
    -->
    select id, no, name, category, type, address, status, deleted, description
    from basic_equipment
  </select>
  
  
  
  
  
  
  
  
  <resultMap extends="BaseResultMap" id="equipmentMapper" type="com.zhenningtech.leaning.basic.model.BasicEquipment">
  	<result column="type" />
  	<association column="category" fetchType="eager" property="categoryName" select="com.zhenningtech.leaning.basic.mapper.BasicCategoryMapper.selectNameByPrimaryKey" />
  </resultMap>
  
  <insert id="insertGeneratorKey" keyProperty="id" parameterType="com.zhenningtech.leaning.basic.model.BasicEquipment" useGeneratedKeys="true">
  	insert into basic_equipment (no, name, 
      category, type, address, 
      status, description)
    values (#{no,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{category,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, 
      #{status,jdbcType=BIT}, 
      #{description,jdbcType=LONGVARCHAR})
  </insert>

  <select id="selectProduct" resultMap="equipmentMapper">
  	select id, no, name, category, type, address,
    status, deleted, description
    from basic_equipment where deleted=0
    and category in 
    <foreach close=")" collection="categoryIds" item="categoryId" open="(" separator=",">
    	#{categoryId}
    </foreach>
    order by id desc
  </select>
  
  <update id="deleteByPrimaryKeysLogic">
    UPDATE basic_equipment t1, 
    	(SELECT max(deleted) + 1 AS deleted, no FROM basic_equipment group by no) t2 
    SET t1.deleted = t2.deleted WHERE t1.no = t2.no 
    AND t1.id in
    <foreach close=")" collection="list" item="productId" open="(" separator=",">
    	#{productId}
    </foreach>
  </update>
  
  <select id="selectProductByPrimaryKey" parameterType="java.lang.Integer" resultMap="equipmentMapper">
  	select id, no, name, category, type, address,
    status, deleted, description
    from basic_equipment where id = #{productId,jdbcType=INTEGER}
  </select>
  
  <update id="updateByPrimaryKeyWithoutDeleted" parameterType="com.zhenningtech.leaning.basic.model.BasicEquipment">
  	update basic_equipment
    set no = #{no,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      category = #{category,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectProductName" resultType="string">
  	select name from basic_equipment where id = #{id,jdbcType=INTEGER}
  </select>
</mapper>